# Мой вариант алгоритма для игры "Угадай число"
import numpy as np


# Функция для игры "Угадай число"
def game_core_v3(num):
    count = 1  # Запускаем счётчик попыток
    low = 1  # Мы знаем, что минимальное значение угадываемого числа - это 1
    high = 101  # А максимальное - 101
    guess = (low + high) // 2  # Начинаем угадывать с середины
    while num != guess:  # Запускаем цикл с условием, что число не угадано
        count += 1  # Добавляем одну попытку в счётчик попыток
        if guess < num:  # Если наше число меньше угадываемого,
            low = guess  # То наше число становится минимумом
        else:  # В противном случае наше число больше угадываемого,
            high = guess  # Тогда наше число становится максимумом
        guess = (low + high) // 2  # Снова начинаем с середины с новым минимумом или максимумом
    return count  # В результате получаем количество попыток, использованное в этой игре


# Проверка скорости угадывания на 1000 игр
def score_game(game_core):
    count_ls = []  # Создаём список, куда будем складывать колечество попыток после каждой игры
    np.random.seed(2)  # Фиксируем основу генератора случайных чисел
    random_array = np.random.randint(1, 101, size=10)  # Создаём список 1000 случайных чисел от 1 до 101
    for number in random_array:
        count_ls.append(game_core(number))  # Для каждого из 1000 случайных чисел добавляем его количество попыток
    score = int(np.mean(count_ls))  # Вычисляем среднее значение
    return score  # В итоге получаем среднее значение


# Запускаем функцию тестирования с функцией game_core_v3 в качестве аргумента и печатаем результат
print(f"Ваш алгоритм угадывает число в среднем за {score_game(game_core_v3)} попыток.")
# Ваш алгоритм угадывает число в среднем за 5 попыток.
